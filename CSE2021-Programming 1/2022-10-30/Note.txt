int *arr = (int*)malloc();
int *arr = (int*)calloc();

=> Heap Memory

int arr[size];
=> xếp chồng (stack)

Dynamic Array -> NOT size array


Matrix A: 3 x 2
Matrix B: 2 x 1

A x B -> A's #columns = B's #rows
Matrix C: A's #rows và B's #columns 

malloc -> no initialized elements
calloc -> yes
	int -> 0
	double -> 0.0
	char -> a
	
2D array -> array chứa những pointer -> first element 


m x n
n x p

for(int k=0; k<m; k++) -> iterate A's rows
	for(int j=0; j<p; j++) -> iterate B's columns
		for(int i=0; i<n; i++) -> iterate A's columns and B's rows

A ->
1 2 3
4 5 6
7 8 9


B -> 

1 2 3
4 5 6
7 8 9

1 2 3    1 2 3
         4 5 6 
         7 8 9
		 
C = 
[ 30 ... ... ]

1 * 1 + 2 * 2 + 3 * 3 = C[0][0]
1 * 2 + 2 * 5 + 3 * 8 = C[0][1]


2 x 2 * 2 x 1 -> 2 x 1

1 2
3 4

1
2


1 * 1 -> print
2 * 2 -> print
3 * 1 -> print
4 * 2 -> print

1 2 3
4 5 6
7 8 9

[[1, 2, 3]
[4, 5, 6]
[7, 8, 9]]

[array1 -> malloc(n)
 array2
 array3]
 
int *
int** malloc(m)

sum(x * y)

(255, 255, 255) -> 0


